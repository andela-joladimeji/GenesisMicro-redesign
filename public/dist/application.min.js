"use strict";var ApplicationConfiguration=function(){var applicationModuleName="genesis-micro",applicationModuleVendorDependencies=["ngResource","ui.router","ui.bootstrap","ui.utils","angularFileUpload"],registerModule=function(moduleName){angular.module(moduleName,[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("admin"),ApplicationConfiguration.registerModule("blogs"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("users"),angular.module("admin").config(["$stateProvider",function($stateProvider){$stateProvider.state("signInUser",{url:"/admin",templateUrl:"modules/users/views/signin.client.view.html"})}]),angular.module("admin").factory("Users",["$resource",function($resource){return $resource("admin",{},{update:{method:"PUT"}})}]),angular.module("admin").filter("range",function(){return function(input,total,start){total=parseInt(total);for(var i=start;total>i;i++)input.push(i);return input}}),angular.module("admin").factory("Tests",["$resource",function($resource){return $resource("admin/test/:testId",{testId:"@_id"},{update:{method:"PUT"}})}]),angular.module("blogs").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Blogs","blogs","dropdown","/blogs(/create)?"),Menus.addSubMenuItem("topbar","blogs","List Blogs","blogs"),Menus.addSubMenuItem("topbar","blogs","New Blog","blogs/create")}]),angular.module("blogs").config(["$stateProvider",function($stateProvider){$stateProvider.state("listBlogs",{url:"/admin/blogs",templateUrl:"modules/blogs/views/list-blogs.client.view.html"}).state("createBlog",{url:"/admin/blogs/create",templateUrl:"modules/blogs/views/create-blog.client.view.html"}).state("viewBlog",{url:"/admin/blogs/:blogId",templateUrl:"modules/blogs/views/view-blog.client.view.html"}).state("selectedBlog",{url:"/admin/viewBlog",templateUrl:"modules/blogs/views/selected-blog.client.view.html"}).state("editBlog",{url:"/admin/blogs/:blogId/edit",templateUrl:"modules/blogs/views/edit-blog.client.view.html"})}]),angular.module("blogs").controller("BlogsController",["$scope","$stateParams","$location","$http","Authentication","Blogs","Comments","Likes",function($scope,$stateParams,$location,$http,Authentication,Blogs,Comments,Likes){$scope.authentication=Authentication,$scope.create=function(){var blog=new Blogs({title:this.title,blogContent:this.blogContent,caption:this.caption,madeBy:this.madeBy});blog.$save(function(response){console.log(response),console.log("admin/blogs/"+response._id),$location.path("admin/blogs/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message}),this.title="",this.content="",this.caption="",this.madeBy=""},$scope.remove=function(blog){if(blog){blog.$remove();for(var i in $scope.blogs)$scope.blogs[i]===blog&&$scope.blogs.splice(i,1)}else $scope.blog.$remove(function(){$location.path("blogs")})},$scope.update=function(){var blog=$scope.blog;blog.$update(function(){$location.path("blogs/"+blog._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.blogs=Blogs.query()},$scope.findOne=function(){$scope.blog=Blogs.get({blogId:$stateParams.blogId})},$scope.selectBlog=function(blog_state){$scope.selectedBlog=blog_state,$scope.selectedBlog.selected=!0,console.log($scope.selectedBlog);var blog=new Blogs({title:$scope.selectedBlog.title,blogContent:$scope.selectedBlog.blogContent,selected:$scope.selectedBlog.selected});console.log(blog),$http.put("/blogs/"+$stateParams.blogId+"/selected",blog).success(function(response){$scope.success=!0,console.log(response)}).error(function(response){$scope.error=response.message,console.log($scope.error)})},$scope.displayBlog=function(){$http.get("/selected").success(function(response){$scope.success=!0,console.log(response),$scope.blog=response[0]}).error(function(response){$scope.error=response.message,console.log($scope.error)})},$scope.createComment=function(){var comment=new Comments({commentContent:this.commentContent,blogId:$scope.blog._id});comment.$save(function(response){console.log(response),$scope.blog=response},function(errorResponse){$scope.error=errorResponse.data.message}),this.commentContent=""},$scope.likeBlog=function(){console.log("like");var like=new Likes({blogId:$scope.blog._id,choice:"like"});console.log("inlike"),like.$save(function(response){$scope.liked=!0,$scope.blog=response},function(errorResponse){$scope.error=errorResponse.data.message})}}]),angular.module("blogs").factory("Blogs",["$resource",function($resource){return $resource("blogs/:blogId",{blogId:"@_id"},{update:{method:"PUT"}})}]),angular.module("blogs").factory("Comments",["$resource",function($resource){return $resource("blogs/:blogId/comments/:commentId",{blogId:"@blogId",commentId:"@_id"},{update:{method:"PUT"}})}]),angular.module("blogs").factory("Likes",["$resource",function($resource){return $resource("blogs/:blogId/:choice",{},{save:{method:"POST",params:{choice:"like",blogId:"@blogId"}}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"}).state("about-us",{url:"/about-us",templateUrl:"modules/core/views/about-us.client.view.html"}).state("about-you",{url:"/about-you",templateUrl:"modules/core/views/about-you.client.view.html"}).state("contact",{url:"/contact",templateUrl:"modules/core/views/connect.client.view.html"}).state("testimonial",{url:"/testimonial",templateUrl:"modules/core/views/testimonial.client.view.html"}).state("community",{url:"/community",templateUrl:"modules/core/views/insights.home.client.view.html"}).state("clientsComments",{url:"/clientsComments",templateUrl:"modules/core/views/clientsComments.client.view.html"}).state("download",{url:"/download",templateUrl:"modules/core/views/downloads.client.view.html"}).state("our_vision",{url:"/our_vision",templateUrl:"modules/core/views/vision.client.view.html"}).state("customer-story",{url:"/customer-success-story",templateUrl:"modules/core/views/customer-story.view.html"}).state("community_blog",{url:"/community/2013-10-1-avoidable-mistakes",templateUrl:"modules/core/views/insights.2013-10-1-avoidable-mistakes.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","$state","Authentication","anchorSmoothScroll","$anchorScroll","$location","Resumes","$upload","$timeout",function($scope,$state,Authentication,anchorSmoothScroll,$anchorScroll,$location,Resumes,$upload,$timeout){$scope.authentication=Authentication,$scope.$state=$state,$scope.gotoElement=function(eID){anchorSmoothScroll.scrollTo(eID),$scope.selected=eID},$scope.onFileSelect=function($files){if($scope.files=$files,$scope.stringFiles=[],$scope.files)for(var i in $scope.files)"application/pdf"===$scope.files[0].type||"application/msword"===$scope.files[0].type||"application/vnd.openxmlformats-officedocument.wordprocessingml.document"===$scope.files[0].type||$scope.files[i].size<6e5?$scope.correctFormat=!0:(alert("error"),alert("Wrong file format..."),$scope.correctFormat=!1),$scope.start(i)},$scope.start=function(indexOftheFile){var formData={key:$scope.files[indexOftheFile].name,AWSAccessKeyID:"AKIAIURTOHJ7C726ULIA",acl:"private",policy:"ewogICJleHBpcmF0aW9uIjogIjIwMjAtMDEtMDFUMDA6MDA6MDBaIiwKICAiY29uZGl0aW9ucyI6IFsKICAgIHsiYnVja2V0IjogImdlbmVzaXNtaWNybyJ9LAogICAgWyJzdGFydHMtd2l0aCIsICIka2V5IiwgIiJdLAogICAgeyJhY2wiOiAicHJpdmF0ZSJ9LAogICAgWyJzdGFydHMtd2l0aCIsICIkQ29udGVudC1UeXBlIiwgIiJdLAogICAgWyJzdGFydHMtd2l0aCIsICIkZmlsZW5hbWUiLCAiIl0sCiAgICBbImNvbnRlbnQtbGVuZ3RoLXJhbmdlIiwgMCwgNTI0Mjg4MDAwXQogIF0KfQ==",signature:"JZSwCIPMywXkxDN+PwPg23DuXiM=",filename:$scope.files[indexOftheFile].name,"Content-Type":$scope.files[indexOftheFile].type};$scope.imageFiles[indexOftheFile]=$upload.upload({url:"https://genesismicro.s3-us-west-2.amazonaws.com",method:"POST",headers:{"Content-Type":$scope.files[indexOftheFile].type},data:formData,file:$scope.files[indexOftheFile]}),console.log(indexOftheFile),$scope.imageFiles[indexOftheFile].then(function(){$timeout(function(){$scope.loading=!1;var resumeURL="https://genesismicro.s3-us-west-2.amazonaws.com"+$scope.files[indexOftheFile].name;$scope.stringFiles.push(resumeURL)})},function(response){console.log(response),response.status>0&&($scope.errorMsg=response.status+": "+response.data),alert("Connection Timed out")},function(){})},$scope.uploadResume=function(){var resume=new Resumes({name:this.name,resumeURL:$scope.stringFiles});resume.$save(function(){$location.path("/")},function(errorResponse){$scope.error=errorResponse.data.message,console.log("saved")})},$scope.showDetails=!1,$scope.showLocation=function(){$scope.displayLocation=!$scope.displayLocation},$scope.hideLocation=function(){$scope.displayLocation=!1,console.log("hide")},$scope.gotoTop=function(){$location.hash("top"),$anchorScroll()}}]),angular.module("core").controller("InsightController",["$scope","Authentication",function(){}]),angular.module("core").controller("InsightDetailsController",["$scope","Authentication",function(){}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["user"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:isPublic||this.menus[menuId].isPublic,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:isPublic||this.menus[menuId].isPublic,roles:roles||this.defaultRoles,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("core").service("anchorSmoothScroll",function(){this.scrollTo=function(eID){function currentYPosition(){return self.pageYOffset?self.pageYOffset:document.documentElement&&document.documentElement.scrollTop?document.documentElement.scrollTop:document.body.scrollTop?document.body.scrollTop:0}function elmYPosition(eID){for(var elm=document.getElementById(eID),y=elm.offsetTop,node=elm;node.offsetParent&&node.offsetParent!==document.body;)node=node.offsetParent,y+=node.offsetTop;return y}var startY=currentYPosition(),stopY=elmYPosition(eID),distance=stopY>startY?stopY-startY:startY-stopY;if(100>distance)return void scrollTo(0,stopY);var speed=Math.round(distance/100);speed>=20&&(speed=20);var step=Math.round(distance/25),leapY=stopY>startY?startY+step:startY-step,timer=0;if(stopY>startY)for(var i=startY;stopY>i;i+=step)setTimeout("window.scrollTo(0, "+leapY+")",timer*speed),leapY+=step,leapY>stopY&&(leapY=stopY),timer++;else for(var i=startY;i>stopY;i-=step)setTimeout("window.scrollTo(0, "+leapY+")",timer*speed),leapY-=step,stopY>leapY&&(leapY=stopY),timer++}}),angular.module("core").factory("Resumes",["$resource",function($resource){return $resource("resumes/:resumeId",{resumeId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/signin.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){"12t$*&$)t2g"===$scope.securityCode?(console.log($scope.securityCode),$scope.credentials.role="admin",console.log($scope.credentials.role)):$scope.credentials.role="user",$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/admin/blogs")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,console.log($scope.authentication.user),$location.path("admin"===$scope.authentication.user.role?"/admin/blogs":"/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);